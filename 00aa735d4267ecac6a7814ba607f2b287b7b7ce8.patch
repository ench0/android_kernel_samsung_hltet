From 00aa735d4267ecac6a7814ba607f2b287b7b7ce8 Mon Sep 17 00:00:00 2001
From: WedyDQ10 <hosigumayuugi@gmail.com>
Date: Sat, 7 Mar 2015 22:33:10 +0900
Subject: [PATCH] Fixed compile error of alucard_hotplug

---
 arch/arm/mach-msm/alucard_hotplug.c | 36 ++++++++++++++++++++++++++++++++++++
 1 file changed, 36 insertions(+)

diff --git a/arch/arm/mach-msm/alucard_hotplug.c b/arch/arm/mach-msm/alucard_hotplug.c
index 0c4ab35..1c21cc5 100644
--- a/arch/arm/mach-msm/alucard_hotplug.c
+++ b/arch/arm/mach-msm/alucard_hotplug.c
@@ -15,6 +15,7 @@
  */
 #include <linux/cpu.h>
 #include <linux/cpufreq.h>
+#include <asm/cputime.h>
 #include <linux/jiffies.h>
 #include <linux/kernel_stat.h>
 #include <linux/tick.h>
@@ -47,6 +48,41 @@ struct hotplug_cpuinfo {
 	unsigned int cur_down_rate;
 };
 
+static inline u64 get_cpu_idle_time_jiffy(unsigned int cpu, u64 *wall)
+{
+	u64 idle_time;
+	u64 cur_wall_time;
+	u64 busy_time;
+
+	cur_wall_time = jiffies64_to_cputime64(get_jiffies_64());
+
+	busy_time = kcpustat_cpu(cpu).cpustat[CPUTIME_USER];
+	busy_time += kcpustat_cpu(cpu).cpustat[CPUTIME_SYSTEM];
+	busy_time += kcpustat_cpu(cpu).cpustat[CPUTIME_IRQ];
+	busy_time += kcpustat_cpu(cpu).cpustat[CPUTIME_SOFTIRQ];
+	busy_time += kcpustat_cpu(cpu).cpustat[CPUTIME_STEAL];
+	busy_time += kcpustat_cpu(cpu).cpustat[CPUTIME_NICE];
+
+	idle_time = cur_wall_time - busy_time;
+	if (wall)
+		*wall = cputime_to_usecs(cur_wall_time);
+
+	return cputime_to_usecs(idle_time);
+}
+
+u64 get_cpu_idle_time(unsigned int cpu, u64 *wall, int io_busy)
+{
+	u64 idle_time = get_cpu_idle_time_us(cpu, io_busy ? wall : NULL);
+
+	if (idle_time == -1ULL)
+		return get_cpu_idle_time_jiffy(cpu, wall);
+	else if (!io_busy)
+		idle_time += get_cpu_iowait_time_us(cpu, wall);
+
+	return idle_time;
+}
+EXPORT_SYMBOL_GPL(get_cpu_idle_time);
+
 static DEFINE_PER_CPU(struct hotplug_cpuinfo, od_hotplug_cpuinfo);
 
 static struct workqueue_struct *alucardhp_wq;
